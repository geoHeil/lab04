plugins {
    id "com.bmuschko.docker-remote-api" version "2.6.1"
}

apply plugin: 'java'

sourceCompatibility = 1.8
targetCompatibility = 1.8

apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'com.bmuschko.docker-remote-api'
apply plugin: 'com.bmuschko.docker-java-application'


jar {
    group = 'se.liu.geoheil'
    baseName = 'lab04-current.geoHeil'
    version = '0.1.0'
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile group: 'org.apache.hadoop', name: 'hadoop-common', version: '2.7.1'
    compile group: 'org.apache.hadoop', name: 'hadoop-client', version: '2.7.1'
    compile group: 'org.apache.hadoop', name: 'hadoop-mapreduce-client-core', version: '2.7.1'
}


uploadArchives {
    repositories {
        flatDir {
            dirs 'repos'
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}

idea {
    project {
        languageLevel = '1.8'
    }

docker {
    // Local docker-machine URL find via following command. Default should be something like http://192.168.99.100
    url = ['docker-machine', 'ip', 'default'].execute().text

    registryCredentials {
        username = project.hasProperty('dockerHubUsername') ? project.property('dockerHubUsername') : null
        password = project.hasProperty('dockerHubPassword') ? project.property('dockerHubPassword') : null
        email = project.hasProperty('dockerHubEmail') ? project.property('dockerHubEmail') : null
    }

    javaApplication {
        baseImage = 'java:8'
        maintainer = 'Georg Heiler "georg.kf.heiler@gmail.com'
        port = 8080
        tag = registryCredentials.url + '/lab04' + version
    }
}
